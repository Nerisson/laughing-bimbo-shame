
#include <GL/gl.h>
#include <GL/glu.h>
#include <GL/glut.h>

/*  Fonctions Prototypes  */

GLvoid  Initialize( char * );
GLvoid  DrawScene( GLvoid );
GLvoid DefineWindow( char * Titre);

/* Variables globales definissant les couleurs
   ------------------------------------------- */

GLfloat White[]={1.,1.,1.};
GLfloat Black[]={0.,0.,0.};
GLfloat Red[]={1.,0.,0.};
GLfloat Green[]={0.,1.,0.};
GLfloat Blue[]={0.,0.,1.};
GLfloat Magenta[]={1.,0.,1.};
GLfloat Cyan[]={0.,1.,1.};
GLfloat Yellow[]={1.,1.,0.};


/* Programme principal
   ------------------- */

int main(int argc ,  char ** argv){

/* code executable :
   ---------------   */
  glutInit(&argc,argv);
  Initialize(argv[0]);
  glutDisplayFunc(DrawScene);
  glutMainLoop();
  return 0 ;
}

GLvoid Initialize( char * Titre ){

	GLvoid DefineWindow( char*);
	glutInitDisplayMode(GLUT_RGB);

/* Definition de la fenetre
____________________________*/

	DefineWindow(Titre);

/* Définir l ’espace visible 
    ------------------------------- */

	glPointSize(4);
	glLineWidth(2.5);
	gluOrtho2D(-10.,10.,-10.,10.);

}

GLvoid DefineWindow( char * Titre){

  GLsizei width,height;

/* Largeur et hauteur de l'ecran
   ---------------------------------- */

  width = glutGet(GLUT_SCREEN_WIDTH);
  height = glutGet(GLUT_SCREEN_HEIGHT);


/* Definition de la fenetre 
     ------------------------ */

	glutInitWindowPosition(width/4,height/4);
	glutInitWindowSize(width/2,height/2);
	glutCreateWindow(Titre);

/* Definition de la couleur du fond de la fenetre
   ----------------------------------------------- */

	glClearColor(0.,0.,0.,1.);
}

GLvoid DrawScene( GLvoid ){

	int i,j;
	GLvoid DrawCercle(GLvoid);

/* Effacement de la fenetre pour un nouvel affichage 
    ---------------------------------------------------------------- */

	glClear( GL_COLOR_BUFFER_BIT);	/* à garder toujours*/
	DrawCercle();
	glFlush();	/* à garder toujours */
}

GLvoid DrawCercle( GLvoid ){

	float i,j;


}

GLfloat radius = 3;
int i;
float degInRad;

glBegin(GL_LINE_LOOP);
 
   for (i=0;i<=360;i+=1)
   {
      degInRad = i*3.1415;
      glVertex2f(cos(degInRad)*radius,sin(degInRad)*radius);
   }
 
   glEnd();
}